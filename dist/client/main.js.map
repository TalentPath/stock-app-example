{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component,OnInit } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { Stock } from './stock';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Stock Watch';\n  exchanges : Stock[];\n\n  constructor(private socket: Socket) { }\n\n  ngOnInit(): void {    \n    this.socket.fromEvent<Stock[]>('stocks').subscribe(data=>{\n      console.log(data);\n      this.exchanges = data;\n    },\n    err => console.log(err));\n    \n  }\n\n  getCountryImage(img: string): string {\n    return '/images/' + img + '.gif';\n  }\n  getStatusImage(img: string): string {\n    return '/images/' + img + '.png';\n  }\n\n}\n","<div class=\"container\">\n  <h2>Angular Stock Watch</h2>\n  <br>\n  <p>This is a full-stack web app with Angular, Node.js, Express and Socket.io</p>\n  <br>\n  <div class=\"table-responsive-sm\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Exchange</th>\n          <th scope=\"col\">Value</th>\n          <th scope=\"col\">Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let exchange of exchanges\">\n          <td scope=\"row\"><img [src]=\"getCountryImage(exchange.country)\"> &nbsp; {{ exchange.name }}</td>\n          <td>{{ exchange.value | number:'1.2-2' }}</td>\n          <td><img [src]=\"getStatusImage(exchange.status)\"></td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nconst config: SocketIoConfig = { url: '/', options: {} };\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    SocketIoModule.forRoot(config),\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}